# use <c-e> as <esc>
map global prompt <c-e> <esc>
map global insert <c-e> <esc>

# show line numbers
add-highlighter global number_lines -relative -hlcursor
add-highlighter global wrap -word -indent
add-highlighter global show_matching

# insert end parenthesis
hook global InsertChar \( %{
    execute-keys -no-hooks ) <left>
}
hook global InsertChar \) %{
    try %{
        execute-keys <esc> H <a-k>\)\)<ret> d i )
    }
}
hook global InsertChar \[ %{
    execute-keys -no-hooks ] <left>
}
hook global InsertChar \] %{
    try %{
        execute-keys <esc> H <a-k>\]\]<ret> d i ]
    }
}
hook global InsertChar \{ %<
    execute-keys -no-hooks } <left>
>
hook global InsertChar \} %<
    try %<
        execute-keys <esc> H <a-k>\}\}<ret> d i }
    >
>

# space for tab
# hook global InsertChar \t %{ try %{
#    execute-keys -draft h %opt{indentwidth}@
#} }

# python repl commands
define-command python-repl-open %{
    nop %sh{
        /usr/bin/tmux new-session -d -s ipython-repl ipython
        COMMAND="/usr/bin/tmux attach-session -t ipython-repl"
        NO_AT_BRIDGE=1 /usr/bin/gnome-terminal -e "${COMMAND}"
    }
}
define-command python-repl-send %{
    nop %sh{
        CODE="$(/usr/bin/printf "\e[200~${kak_selection}\e[201~")"
        /usr/bin/tmux send-keys -t ipython-repl "${CODE}" Enter
    }
}

# python-indent commands
define-command -hidden python-indent-on-new-line2 %<
    evaluate-commands -draft -itersel %<
        # indent after line ending with (,[,{
        try %<
            execute-keys -draft <space> k <a-x> <a-k> [\(\[\{]$ <ret> j <a-gt>
        >
        # deindent after line ending with ),],}
        try %<
            execute-keys -draft <space> k <a-x> <a-k> ^\h*[\)\]\}]$ <ret>
            execute-keys -draft <space> Z k <a-x> _ m <a-S> \' <a-z> a <a-&>
        >
    >
>

# python remove ws command
define-command -hidden python-remove-ws %{
    try %{
        execute-keys -draft <space> <a-x> <a-k> ^(\h{4})*\h{3}$ <ret> h 2H <a-d>
    }
}

# python filetype hooks
hook -group python-configs global WinSetOption filetype=python %{
    # use autopep8 for python formatcmd
    set window formatcmd 'autopep8 -'
    # maps for repl
    map window user r :python-repl-open<ret>
    map window user s :python-repl-send<ret>
    # set additional indent hooks
    hook -group python-indent window InsertChar \n python-indent-on-new-line2
    hook -group python-indent window InsertDelete \h python-remove-ws
}
hook global WinSetOption filetype=(?!python).* %{
    remove-hooks window python-configs
}
